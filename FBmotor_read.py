# -*- coding: utf-8 -*-
"""fbmotor_switch_v2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yq7kFEOzWXSfh5VoBNWM6Rm7m_WE9VZv
"""

# -*- coding: utf-8 -*-
"""FBmotor-switch

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rPS0Blbm8lBhbyCJ8aAflYUi62Cse55F
"""

import time
import os
import serial
import sys
import RPi.GPIO as GPIO
import re
import time
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(True)
STEPPER_PINS = [5,6,12,13]
for pin in STEPPER_PINS:
  print(pin)
  GPIO.setup(pin,GPIO.OUT)
  GPIO.output(pin, GPIO.LOW)
  print('ok')   
GPIO.setup(5, GPIO.OUT)
GPIO.setup(12, GPIO.OUT) 





x_STEPS= 128
motor_steps = 1536
buf = 0
contR = 0
contL = 0

count = 0;

while True:
  start=time.time()  
  #f = open('FBmotor_mode.txt','r+')
  #modelswitch = int(f.readline())
  #f.close
  #if modelswitch ==1:
  #  file='FBmotor_lora.txt'
  #elif modelswitch ==2:
  #  file='FBmotor_PID.txt'
  #else:
  #  print("wrong")

  file='PID.txt'     
  f = open(file,'r+')
  data = f.readline()
  print(data)
  if data == "":
    pass
  else:
    # ~ datalist = data.split(',') #找尋,並分割資料
    datalist = data
    f.close()


    # ~ x_STEPS = ''.join([x_STEPS for x_STEPS in datalist[1] if x_STEPS.isdigit()]) #找尋數字
    x_STEPS = ''.join([x_STEPS for x_STEPS in datalist if x_STEPS.isdigit()]) #找尋數字
    x_STEPS = int(x_STEPS)
    # ~ if x_STEPS == 255:
            # ~ x_STEPS = 328
    x_STEPS= x_STEPS*12
    #print('X:',x_STEPS)


    if motor_steps < x_STEPS:              # x_STEPS_CW右轉
      if contL == 1:
              time.sleep(0.05)
      for i in range(12):
          GPIO.output(5, 1)   
          time.sleep(0.0001)    
          GPIO.output(5, 0)    
          time.sleep(0.0001)
          motor_steps += 1;
          
      contR = 1
      contL = 0
    
    
    
    if motor_steps > x_STEPS:              # x_STEPS_CCW左轉
      if contR == 1:
              time.sleep(0.05)
      for i in range(12):
          GPIO.output(12, 1)   
          time.sleep(0.0001)    
          GPIO.output(12, 0)    
          time.sleep(0.0001)
          motor_steps -= 1;
          
      contL = 1
      contR = 0
    time.sleep(0.00001)
  print(motor_steps)
  end=time.time()
  FPS=round(1/(end-start),2)
  print('FPS:',FPS)
  
    

